{"version":3,"sources":["components/Header/Header.js","components/Projects/ProjectsCard/ProjectsCard.js","components/Projects/dummydata.js","components/Projects/Projects.js","actions/index.js","components/Contact/Contact.js","components/Footer/Footer.js","views/HomeView/HomeView.js","components/Navbar/Navbar.js","views/DevView/DevView.js","components/App/App.js","views/ProjectsView/ProjectsView.js","serviceWorker.js","reducers/projectsReducer.js","reducers/index.js","index.js"],"names":["Header","id","className","icon","faCode","Component","ProjectsCard","state","imageId","e","preventDefault","this","props","image_url","length","setState","title","toUpperCase","tags","map","tag","key","description","href","github_url","target","rel","faGithub","url","faExternalLinkAlt","onClick","prevImage","src","alt","nextImage","PORTFOLIO_DATA","projectCardBackgroundColors","r","g","b","a","Projects","category","projects","PROJECTS_DATA","project","bgColor","connect","isGettingProjects","projectsReducer","error","getProjects","dispatch","type","axios","get","then","res","payload","catch","err","Contact","yourName","yourEmail","yourMessage","verifyCallback","emailjs","send","process","from_name","reply_to","message","console","log","name","value","action","method","onSubmit","handleSendMsg","placeholder","onChange","handleTextChange","size","faLinkedin","Footer","HomeView","Navbar","open","toggle","App","exact","path","render","Boolean","window","location","hostname","match","initialState","isDeletingProject","isPostingProject","isPuttingProject","combineReducers","data","store","createStore","rootReducer","applyMiddleware","thunk","logger","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f2df801f.chunk.js","sourcesContent":["// import dependencies\r\nimport React, { Component } from 'react';\r\n\r\n// import fontawesome icons\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCode } from '@fortawesome/free-solid-svg-icons';\r\n\r\n// import styling\r\nimport './Header.scss';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <div id='header' className='header-wrapper'>\r\n                <div className='header-content'>\r\n                    <h1 className='header-title'>\r\n                        <FontAwesomeIcon icon={faCode} className='icon' />\r\n                        &nbsp;Sammy Chang\r\n                    </h1>\r\n                    {/* <h2 className='header-description'>I'm a Web Developer</h2>\r\n                    <p className='header-textarea'>lorem ipsum...(about)</p> */}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","// import dependencies\r\nimport React, { Component } from 'react';\r\n\r\n// import fontawesome icons\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\n// import styling\r\nimport './ProjectsCard.scss';\r\n\r\nclass ProjectsCard extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            imageId: 0,\r\n        };\r\n    }\r\n\r\n    nextImage(e) {\r\n        e.preventDefault();\r\n        if (this.state.imageId === this.props.image_url.length - 1) {\r\n            this.setState({ imageId: 0 });\r\n        } else {\r\n            this.setState({\r\n                imageId: this.state.imageId + 1,\r\n            });\r\n        }\r\n    }\r\n\r\n    prevImage(e) {\r\n        e.preventDefault();\r\n        if (this.state.imageId === 0) {\r\n            this.setState({ imageId: this.props.image_url.length - 1 });\r\n        } else {\r\n            this.setState({\r\n                imageId: this.state.imageId - 1,\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <article className='projects-card-wrapper'>\r\n                <div className='projects-card-info'>\r\n                    <h3 className='projects-card-title'>{this.props.title.toUpperCase()}</h3>\r\n                    {this.props.tags.map((tag) => {\r\n                        return (\r\n                            <span key={tag} className='projects-card-tag'>\r\n                                {tag}\r\n                            </span>\r\n                        );\r\n                    })}\r\n                    <div className='projects-card-description'>{this.props.description}</div>\r\n                    <div className='projects-card-icons'>\r\n                        <a className='icon' href={this.props.github_url} target='_blank' rel='noopener noreferrer'>\r\n                            <FontAwesomeIcon icon={faGithub} />\r\n                        </a>\r\n                        <a className='icon' href={this.props.url} target='_blank' rel='noopener noreferrer'>\r\n                            <FontAwesomeIcon icon={faExternalLinkAlt} />\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n                <div className='projects-card-image'>\r\n                    <button className='carousel-button prev' onClick={(e) => this.prevImage(e)}>\r\n                        {'<'}\r\n                    </button>\r\n                    <img src={this.props.image_url[this.state.imageId]} alt=''></img>\r\n                    <button className='carousel-button next' onClick={(e) => this.nextImage(e)}>\r\n                        {'>'}\r\n                    </button>\r\n                </div>\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectsCard;\r\n","const PORTFOLIO_DATA = [\r\n    {\r\n        id: 1,\r\n        title: 'H3rra',\r\n        description: 'Wedding planner app that helps couples keep track of their guests and vendors.',\r\n        image_url: ['https://i.imgur.com/TkHQrCT.jpg'],\r\n        tags: ['React', 'React-Redux', 'React Router', 'Reactstrap', 'Knex.js', 'Express', 'PostgreSQL'],\r\n        url: 'https://labspt5weddingbells.netlify.app/',\r\n        github_url: 'https://github.com/Lambda-School-Labs/wedding-bells-fe',\r\n    },\r\n    {\r\n        id: 2,\r\n        title: 'Vue Jeopardy',\r\n        description: 'A simple Jeopardy game built with Vue. Working on implementing Pusher to enable multiplayer.',\r\n        image_url: ['https://i.imgur.com/crB347y.jpg', 'https://i.imgur.com/M4imGKo.jpg'],\r\n        tags: ['Vue', 'Pusher'],\r\n        url: '',\r\n        github_url: 'https://github.com/schang1146/vue-jeopardy',\r\n    },\r\n    {\r\n        id: 3,\r\n        title: 'Game of Life',\r\n        description: \"Simulation of Conway's Game of Life built with React\",\r\n        image_url: ['https://i.imgur.com/PzFW948.jpg'],\r\n        tags: ['React'],\r\n        url: 'https://game-of-life-sc.netlify.app/',\r\n        github_url: 'https://github.com/lambda-school-assignments0/CS-Build-Week-1',\r\n    },\r\n    {\r\n        id: 4,\r\n        title: 'Trivia in Tandem',\r\n        description: \"Trivia training game built as part of Tandem's Code Challenge.\",\r\n        image_url: ['https://i.imgur.com/Pk1K9Gc.png', 'https://i.imgur.com/m3v0anU.png', 'https://i.imgur.com/6ECGgF3.png'],\r\n        tags: ['React', 'React Router', 'SASS'],\r\n        url: 'https://triviaintandem.netlify.app/',\r\n        github_url: 'https://github.com/schang1146/Tandem_Apprentice_Challenge_2020',\r\n    },\r\n];\r\n\r\nexport default PORTFOLIO_DATA;\r\n","// import dependencies\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n// import components\r\nimport ProjectsCard from './ProjectsCard/ProjectsCard';\r\n\r\n// import styling\r\nimport './Projects.scss';\r\n\r\n// import actions\r\nimport { getProjects } from '../../actions';\r\n\r\n// import dummy data\r\nimport PROJECTS_DATA from './dummydata';\r\n\r\nconst projectCardBackgroundColors = [\r\n    {\r\n        r: 242,\r\n        g: 132,\r\n        b: 158,\r\n        a: 0.8,\r\n    },\r\n];\r\n\r\nclass Projects extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            category: 'All',\r\n            projects: PROJECTS_DATA,\r\n        };\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     this.props.getProjects();\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div id='projects' className='projects-wrapper'>\r\n                <div className='projects-content'>\r\n                    <h2 className='projects-description'>PROJECTS</h2>\r\n                    {/* <div className='projects-tags'>\r\n                        <button color='primary' onClick={() => this.setState({ category: 'All' })} active={this.state.category === 'All'}>\r\n                            All\r\n                        </button>\r\n                        <button onClick={() => this.setState({ category: 'Web Dev' })} active={this.state.category === 'Web Dev'}>\r\n                            Web Development\r\n                        </button>\r\n                        <button onClick={() => this.setState({ category: 'Algo' })} active={this.state.category === 'Algo'}>\r\n                            Algorithms\r\n                        </button>\r\n                    </div> */}\r\n                    {/* <hr /> */}\r\n                    {/* To Do: Add cards to show off projects */}\r\n                    <div className='projects-cards'>\r\n                        {this.state.projects.map((project) => {\r\n                            // if (this.state.category === 'All' || project.cardTags === this.state.category) {\r\n                            return <ProjectsCard key={project.id} {...project} bgColor={projectCardBackgroundColors[0]} />;\r\n                            // } else {\r\n                            //     return undefined;\r\n                            // }\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isGettingProjects: state.projectsReducer.isGettingProjects,\r\n    // isDeletingProject: state.projectsReducer.isDeletingProject,\r\n    // isPostingProject: state.projectsReducer.isPostingProject,\r\n    // isPuttingProject: state.projectsReducer.isPuttingProject,\r\n    error: state.projectsReducer.error,\r\n    projects: state.projectsReducer.projects,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjects })(Projects);\r\n","import axios from 'axios';\r\n\r\n// add additional actions with:\r\n// export const ${action_name} = '${action_name}';\r\n\r\nexport const GET_PROJECT_FAILURE = 'GET_PROJECT_FAILURE';\r\nexport const GET_PROJECT_START = 'GET_PROJECT_START';\r\nexport const GET_PROJECT_SUCCESS = 'GET_PROJECT_SUCCESS';\r\nexport const DELETE_PROJECT_FAILURE = 'DELETE_PROJECT_FAILURE';\r\nexport const DELETE_PROJECT_START = 'DELETE_PROJECT_START';\r\nexport const DELETE_PROJECT_SUCCESS = 'DELETE_PROJECT_SUCCESS';\r\nexport const POST_PROJECT_FAILURE = 'POST_PROJECT_FAILURE';\r\nexport const POST_PROJECT_START = 'POST_PROJECT_START';\r\nexport const POST_PROJECT_SUCCESS = 'POST_PROJECT_SUCCESS';\r\nexport const PUT_PROJECT_FAILURE = 'PUT_PROJECT_FAILURE';\r\nexport const PUT_PROJECT_START = 'PUT_PROJECT_START';\r\nexport const PUT_PROJECT_SUCCESS = 'PUT_PROJECT_SUCCESS';\r\n\r\nexport const getProjects = () => (dispatch) => {\r\n    dispatch({ type: GET_PROJECT_START });\r\n    return axios\r\n        .get(`http://localhost:5000/api/projects`)\r\n        .then((res) => {\r\n            dispatch({ type: GET_PROJECT_SUCCESS, payload: res });\r\n        })\r\n        .catch((err) => dispatch({ type: GET_PROJECT_FAILURE }));\r\n};\r\n\r\nexport const deleteProject = () => (dispatch) => {\r\n    dispatch({ type: DELETE_PROJECT_START });\r\n};\r\n\r\nexport const postProject = () => (dispatch) => {\r\n    dispatch({ type: POST_PROJECT_START });\r\n};\r\n\r\nexport const putProject = () => (dispatch) => {\r\n    dispatch({ type: PUT_PROJECT_START });\r\n};\r\n","// import dependencies\r\nimport React, { Component } from 'react';\r\nimport emailjs from 'emailjs-com';\r\n\r\n// import fontawesome icons\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub, faLinkedin } from '@fortawesome/free-brands-svg-icons';\r\n\r\n// import styling\r\nimport './Contact.scss';\r\n\r\nclass Contact extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            yourName: '',\r\n            yourEmail: '',\r\n            yourMessage: '',\r\n            verifyCallback: false,\r\n        };\r\n    }\r\n\r\n    handleSendMsg(e) {\r\n        e.preventDefault();\r\n        if (this.state.yourName !== '' && this.state.yourEmail !== '' && this.state.yourMessage !== '') {\r\n            emailjs\r\n                .send(process.env.REACT_APP_EMAILJS_SERVICE_ID, process.env.REACT_APP_EMAILJS_TEMPLATE_ID, { from_name: this.state.yourName, reply_to: this.state.yourEmail, message: this.state.yourMessage }, process.env.REACT_APP_EMAILJS_USER_ID)\r\n                .then((res) => {\r\n                    console.log('Email Successful!');\r\n                })\r\n                .catch((err) => {\r\n                    console.error('Email Unsuccessful!');\r\n                });\r\n        }\r\n\r\n        this.setState({ yourName: '', yourEmail: '', yourMessage: '' });\r\n    }\r\n\r\n    handleTextChange(e) {\r\n        e.preventDefault();\r\n        this.setState({ ...this.state, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id='contact' className='contact-wrapper'>\r\n                <div className='contact-left'>\r\n                    <h2 className='contact-title'>GET IN TOUCH</h2>\r\n                    <form className='contact-form' action='?' method='POST' onSubmit={(e) => this.handleSendMsg(e)}>\r\n                        <span className='contact-form-top'>\r\n                            <input type='text' name='yourName' id='yourName' placeholder='Name' onChange={(e) => this.handleTextChange(e)} value={this.state.yourName} />\r\n                            <input type='email' name='yourEmail' id='yourEmail' placeholder='Email' onChange={(e) => this.handleTextChange(e)} value={this.state.yourEmail} />\r\n                        </span>\r\n                        <span className='contact-form-bottom'>\r\n                            <textarea name='yourMessage' id='yourMessage' placeholder='Message' onChange={(e) => this.handleTextChange(e)} value={this.state.yourMessage} />\r\n                        </span>\r\n                        {/* <div className='g-recaptcha' verifyCallback={this.verifyCallback} data-sitekey={process.env.REACT_APP_RECAPTCHA_SITEKEY_V2_CHECKBOX}></div> */}\r\n                        <br />\r\n                        {/* <input type='submit' value='SEND' /> */}\r\n                        <button className='custom-btn' onClick={(e) => this.handleSendMsg(e)}>\r\n                            SEND\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n                <div className='contact-right'>\r\n                    <h2 className='contact-title'>FOLLOW</h2>\r\n                    <div className='contact-social-media'>\r\n                        <a className='icon' href='https://www.github.com/schang1146/' target='_blank' rel='noopener noreferrer'>\r\n                            <FontAwesomeIcon icon={faGithub} size='lg' />\r\n                        </a>\r\n                        <a className='icon' href='https://www.linkedin.com/in/sammy-chang/' target='_blank' rel='noopener noreferrer'>\r\n                            <FontAwesomeIcon icon={faLinkedin} size='lg' />\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;\r\n","// import dependencies\r\nimport React, { Component } from 'react';\r\n\r\nimport './Footer.scss';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return <footer className='footer-wrapper'>© Sammy Chang</footer>;\r\n    }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\n\r\n// import components\r\n// import Navbar from '../../components/Navbar/Navbar';\r\nimport Header from '../../components/Header/Header';\r\n// import About from '../../components/About/About';\r\nimport Projects from '../../components/Projects/Projects';\r\nimport Contact from '../../components/Contact/Contact';\r\nimport Footer from '../../components/Footer/Footer';\r\n\r\nclass HomeView extends Component {\r\n    render() {\r\n        return (\r\n            <div className='home-view-wrapper'>\r\n                {/* <Navbar /> */}\r\n                <Header />\r\n                {/* <About /> */}\r\n                <Projects />\r\n                <Contact />\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomeView;\r\n","// import dependencies\r\nimport React, { Component } from 'react';\r\n\r\n// import components\r\n// import { Button } from 'reactstrap';\r\n\r\n// import styling\r\nimport './Navbar.scss';\r\n\r\nclass Navbar extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            open: false,\r\n        };\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({ open: !this.state.open });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='navbar-wrapper'>\r\n                {/* <div className='navbar-left'>\r\n                    <p>&lt;/&gt; Sammy Chang</p>\r\n                </div> */}\r\n                {/* <div className='navbar-center'>\r\n                    <text className='light'>Sammy&nbsp;</text>Chang\r\n                </div> */}\r\n                {/* <div className='navbar-right'>\r\n                    <Button outline color='link' className='navbar-link'>\r\n                        About\r\n                    </Button>\r\n                    <Button outline color='link' className='navbar-link'>\r\n                        Projects\r\n                    </Button>\r\n                    <Button outline color='link' className='navbar-link'>\r\n                        Contact\r\n                    </Button>\r\n                </div> */}\r\n                <div className={this.state.open ? 'menu-btn open' : 'menu-btn'} onClick={() => this.toggle()}>\r\n                    <div className='menu-btn__burger' />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react';\r\n\r\n// import material-ui components\r\n\r\nclass DevView extends Component {\r\n    render() {\r\n        return <div className='dev-view-wrapper'></div>;\r\n    }\r\n}\r\n\r\nexport default DevView;\r\n","// import dependencies\r\nimport React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\n// import styling\r\nimport './App.scss';\r\n\r\n// import views\r\nimport { HomeView } from '../../views';\r\n// import { DevView } from '../../views';\r\n// import { ProjectsView } from '../../views';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <Switch>\r\n                    <Route exact path='/' render={() => <HomeView />} />\r\n                    {/* <Route path='/dev' render={() => <DevView />} /> */}\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\n\r\n// import components\r\nimport Navbar from '../../components/Navbar/Navbar';\r\nimport Header from '../../components/Header/Header';\r\nimport Projects from '../../components/Projects/Projects';\r\n\r\nclass ProjectsView extends Component {\r\n    render() {\r\n        return (\r\n            <div className='projects-view-wrapper'>\r\n                <Navbar />\r\n                <Header />\r\n                <Projects />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectsView;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { GET_PROJECT_FAILURE, GET_PROJECT_START, GET_PROJECT_SUCCESS, DELETE_PROJECT_FAILURE, DELETE_PROJECT_START, DELETE_PROJECT_SUCCESS, POST_PROJECT_FAILURE, POST_PROJECT_START, POST_PROJECT_SUCCESS, PUT_PROJECT_FAILURE, PUT_PROJECT_START, PUT_PROJECT_SUCCESS } from '../actions';\r\n\r\nconst initialState = {\r\n    isGettingProjects: false,\r\n    isDeletingProject: false,\r\n    isPostingProject: false,\r\n    isPuttingProject: false,\r\n    error: '',\r\n    projects: [],\r\n};\r\n\r\nexport const projectsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_PROJECT_FAILURE:\r\n            return {\r\n                ...state,\r\n                isGettingProjects: false,\r\n            };\r\n        case GET_PROJECT_START:\r\n            return {\r\n                ...state,\r\n                isGettingProjects: true,\r\n            };\r\n        case GET_PROJECT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isGettingProjects: false,\r\n                projects: action.payload.data,\r\n            };\r\n        case DELETE_PROJECT_FAILURE:\r\n            return {\r\n                ...state,\r\n                isDeletingProject: false,\r\n            };\r\n        case DELETE_PROJECT_START:\r\n            return {\r\n                ...state,\r\n                isDeletingProject: true,\r\n            };\r\n        case DELETE_PROJECT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isDeletingProject: false,\r\n            };\r\n        case POST_PROJECT_FAILURE:\r\n            return {\r\n                ...state,\r\n                isPostingProject: false,\r\n            };\r\n        case POST_PROJECT_START:\r\n            return {\r\n                ...state,\r\n                isPostingProject: true,\r\n            };\r\n        case POST_PROJECT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isPostingProject: false,\r\n            };\r\n        case PUT_PROJECT_FAILURE:\r\n            return {\r\n                ...state,\r\n                isPuttingProject: false,\r\n            };\r\n        case PUT_PROJECT_START:\r\n            return {\r\n                ...state,\r\n                isPuttingProject: true,\r\n            };\r\n        case PUT_PROJECT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isPuttingProject: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from 'redux';\r\n// add additional reducers with:\r\n// import { ${reducer_name} } from ${reducer_location};\r\nimport { projectsReducer } from './projectsReducer';\r\n\r\nexport default combineReducers({\r\n    // add additional reducers with:\r\n    // ${reducer_name},\r\n    projectsReducer,\r\n});\r\n","// import dependencies\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\n// import dependencies - redux\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\n\r\n// import styling\r\nimport './index.scss';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// import components\r\nimport App from './components/App/App';\r\n\r\n// import serviceworker\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk, logger));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Router>\r\n            <App />\r\n        </Router>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
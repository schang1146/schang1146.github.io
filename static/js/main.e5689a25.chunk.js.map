{"version":3,"sources":["components/Navbar/Navbar.js","components/Header/Header.js","components/About/About.js","components/Portfolio/PortfolioCard/PortfolioCard.js","components/Portfolio/dummydata.js","components/Portfolio/Portfolio.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Navbar","className","Button","outline","color","Component","Header","id","ButtonGroup","size","href","icon","faLinkedin","faEnvelope","About","src","alt","PortfolioCard","Card","CardImg","top","width","this","props","cardImg","cardTitle","Badge","onClick","console","log","cardTags","CardBody","CardTitle","CardSubtitle","cardSubtitle","CardText","cardText","cardUpdated","PORTFOLIO_DATA","Portfolio","state","portfolioData","map","portfolio","key","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e5689a25.chunk.js","sourcesContent":["// import dependencies\r\nimport React, { Component } from 'react';\r\n\r\n// import components\r\nimport { Button } from 'reactstrap';\r\n\r\n// import styling\r\nimport './Navbar.scss';\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <div className='navbar-wrapper'>\r\n                <h2> </h2>\r\n                <div className='navbar-links-wrapper'>\r\n                    <Button outline color='link' className='navbar-link'>About</Button>\r\n                    <Button outline color='link' className='navbar-link'>Portfolio</Button>\r\n                    <Button outline color='link' className='navbar-link'>Contact</Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","// import dependencies\r\nimport React, { Component } from 'react';\r\n\r\n// import components\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faLinkedin } from '@fortawesome/free-brands-svg-icons';\r\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\r\nimport { Button, ButtonGroup } from 'reactstrap';\r\n\r\n// import styling\r\nimport './Header.scss';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <div id='header' className='header-wrapper'>\r\n                <div className='header-content'>\r\n                    <h1>Sammy Chang</h1>\r\n                    <hr />\r\n                    <div className='header-nav'>\r\n                        <ButtonGroup>\r\n                            <Button outline color='secondary' size='lg' href='#about'>\r\n                                About\r\n                            </Button>\r\n                            <Button outline color='secondary' size='lg' href='#portfolio'>\r\n                                Portfolio\r\n                            </Button>\r\n                            <Button outline color='secondary' size='lg' href='#contact'>\r\n                                Contact\r\n                            </Button>\r\n                        </ButtonGroup>\r\n                    </div>\r\n                    <div className='header-icons'>\r\n                        <FontAwesomeIcon icon={faLinkedin} size='2x' className='icon' />\r\n                        <FontAwesomeIcon icon={faEnvelope} size='2x' className='icon' />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","// import dependencies\r\nimport React, { Component } from 'react';\r\n\r\n// import styling\r\nimport './About.scss';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <div id='about' className='about-wrapper'>\r\n                <div className='about-content'>\r\n                    <h2>About</h2>\r\n                    <hr />\r\n                    <div className='about-bottom'>\r\n                        <img src='https://i.stack.imgur.com/aJCJf.png' alt='' className='about-left' />\r\n                        <p className='about-right'>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed lacinia dictum luctus. In ultrices risus ut tortor convallis lobortis. Ut in sollicitudin sapien. Morbi suscipit, sem ac placerat laoreet, felis arcu accumsan nisl, a fermentum ex metus sit amet eros. Curabitur non efficitur nunc, et accumsan erat. Sed felis purus, vestibulum eget arcu at, pellentesque varius justo. Donec condimentum mauris et mauris tristique, in fermentum enim facilisis. Fusce id quam elementum, imperdiet justo ut, luctus purus. Praesent finibus in sem vel lobortis. Integer quis magna lobortis, dignissim eros id, placerat diam. Cras ac vulputate urna. Aliquam erat volutpat. Suspendisse semper eros eu ipsum convallis, ac placerat libero dignissim.</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;\r\n","// import dependencies\r\nimport React, { Component } from 'react';\r\n\r\n// import components\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Button, Badge } from 'reactstrap';\r\n\r\n// import styling\r\nimport './PortfolioCard.scss';\r\n\r\nclass PortfolioCard extends Component {\r\n    render() {\r\n        return (\r\n            <Card className='portfolio-card-wrapper'>\r\n                <CardImg top width='100%' src={this.props.cardImg} alt={this.props.cardTitle} />\r\n                <Badge\r\n                    color='danger'\r\n                    className='portfolio-card-badge'\r\n                    onClick={() => {\r\n                        console.log('To Do: Change filters');\r\n                    }}\r\n                >\r\n                    {this.props.cardTags}\r\n                </Badge>\r\n                <CardBody>\r\n                    <CardTitle>{this.props.cardTitle}</CardTitle>\r\n                    <CardSubtitle>{this.props.cardSubtitle}</CardSubtitle>\r\n                    <CardText>{this.props.cardText}</CardText>\r\n                    <CardText>\r\n                        <small className='text-muted'>Last updated {this.props.cardUpdated} ago</small>\r\n                    </CardText>\r\n                    <Button color='primary'>Go To Project</Button>\r\n                </CardBody>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PortfolioCard;\r\n","const PORTFOLIO_DATA = [\r\n    {\r\n        id: 1,\r\n        cardTitle: 'H3rra',\r\n        cardSubtitle: 'Wedding Planner',\r\n        cardText: '',\r\n        cardImg: 'https://i.stack.imgur.com/aJCJf.png',\r\n        cardUpdated: '999 days',\r\n        cardTags: 'Web Dev'\r\n    },\r\n    {\r\n        id: 2,\r\n        cardTitle: 'Dummy Project',\r\n        cardSubtitle: 'Totally Not A Fake Project',\r\n        cardText: 'Used !$%*() along with !)($) to create a 1!)#*249',\r\n        cardImg: 'https://i.stack.imgur.com/aJCJf.png',\r\n        cardUpdated: '999 days',\r\n        cardTags: 'Placeholder'\r\n    },\r\n    {\r\n        id: 3,\r\n        cardTitle: 'Dummy Project',\r\n        cardSubtitle: 'Totally Not A Fake Project',\r\n        cardText: 'Used !$%*() along with !)($) to create a 1!)#*249',\r\n        cardImg: 'https://i.stack.imgur.com/aJCJf.png',\r\n        cardUpdated: '999 days',\r\n        cardTags: 'Placeholder'\r\n    }\r\n];\r\n\r\nexport default PORTFOLIO_DATA;\r\n","// import dependencies\r\nimport React, { Component } from 'react';\r\n\r\n// import components\r\nimport { Button } from 'reactstrap';\r\nimport PortfolioCard from './PortfolioCard/PortfolioCard';\r\n\r\n// import styling\r\nimport './Portfolio.scss';\r\n\r\n// import data\r\nimport PORTFOLIO_DATA from './dummydata';\r\n\r\nclass Portfolio extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            portfolioData: PORTFOLIO_DATA\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id='portfolio' className='portfolio-wrapper'>\r\n                <div className='portfolio-content'>\r\n                    <h2>Portfolio</h2>\r\n                    <div className='portfolio-tags'>\r\n                        <Button color='primary' size='sm'>\r\n                            All\r\n                        </Button>\r\n                        <Button color='secondary' size='sm'>\r\n                            Web Development\r\n                        </Button>\r\n                        <Button color='secondary' size='sm'>\r\n                            Algorithms\r\n                        </Button>\r\n                        <Button color='secondary' size='sm'>\r\n                            Trade Show Booths\r\n                        </Button>\r\n                    </div>\r\n                    <hr />\r\n                    {/* To Do: Add cards to show off projects */}\r\n                    <div className='portfolio-cards'>\r\n                        {this.state.portfolioData.map(portfolio => (\r\n                            <PortfolioCard key={portfolio.id} {...portfolio} />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Portfolio;\r\n","// import dependencies\r\nimport React, { Component } from 'react';\r\n\r\n// import styling\r\nimport './App.scss';\r\n\r\n// import components\r\nimport Navbar from '../Navbar/Navbar';\r\nimport Header from '../Header/Header';\r\nimport About from '../About/About';\r\nimport Portfolio from '../Portfolio/Portfolio';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <Navbar />\r\n                <Header />\r\n                <About />\r\n                <Portfolio />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// import dependencies\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n// import styling\r\nimport './index.scss';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// import components\r\nimport App from './components/App/App';\r\n\r\n// import serviceworker\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}